<?xml version="1.1" encoding="UTF-8"?>
<metadata name="SchoolXML2Rel" path="/users/composite/admin/CISTraining/Physical/Formatting/Transformations/SchoolXML2Rel" type="PROCEDURE" subtype="TRANSFORM_PROCEDURE" changeToken="0">
  <parameters>
    <parameter name="ClassList" direction="OUT" nullable="false">
      <datatype name="ClassList" type="TABLE" refId="1">
        <element name="CourseName" direction="OUT">
          <datatype name="NCName" type="STRING" maxLength="2147483647"/>
        </element>
        <element name="CourseDescription" direction="OUT">
          <datatype name="string" type="STRING" maxLength="2147483647"/>
        </element>
        <element name="Department" direction="OUT">
          <datatype name="string" type="STRING" maxLength="2147483647"/>
        </element>
        <element name="CreditNumber" direction="OUT">
          <datatype name="integer" type="DECIMAL" maxFractionalDigits="0"/>
        </element>
        <element name="TeacherName" direction="OUT">
          <datatype name="string" type="STRING" maxLength="2147483647"/>
        </element>
        <element name="TeacherEmail" direction="OUT">
          <datatype name="string" type="STRING" maxLength="2147483647"/>
        </element>
        <element name="StudentName" direction="OUT">
          <datatype name="string" type="STRING" maxLength="2147483647"/>
        </element>
        <element name="StudentEmail" direction="OUT">
          <datatype name="string" type="STRING" maxLength="2147483647"/>
        </element>
      </datatype>
    </parameter>
  </parameters>
  <security>
    <owner user="admin" domain="composite"/>
  </security>
  <dependency target="/users/composite/admin/CISTraining/Physical/Metadata/File_SchoolXML/school.xml" type="TREE">
    <datatype name="Tree" type="TREE" refId="1"></datatype>
  </dependency>
  <attribute name="creationDate" type="LONG">1479923601096</attribute>
  <attribute name="creatorUserDomain" type="STRING">composite</attribute>
  <attribute name="creatorUserId" type="INTEGER">-1973</attribute>
  <attribute name="creatorUserName" type="STRING">admin</attribute>
  <attribute name="lastModifiedDate" type="LONG">1491324565387</attribute>
  <attribute name="lastModifiedUserDomain" type="STRING">composite</attribute>
  <attribute name="lastModifiedUserId" type="INTEGER">-1973</attribute>
  <attribute name="lastModifiedUserName" type="STRING">admin</attribute>
  <attribute name="resourceModifiedDateOnSourceCISSite" type="LONG">1479923601096</attribute>
  <attribute name="transformModel" type="BYTE_ARRAY">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</attribute>
  <attribute name="transformSource" type="STRING">declare copy-namespaces no-preserve,inherit;
declare namespace xquery =  &quot;http://compositesw.com/transform/xquery&quot;;
declare namespace sql =  &quot;http://compositesw.com/transform/sql&quot;;
declare namespace school =  &quot;http://compositesw.com/transform/example/school&quot;;
declare namespace ext2 =  &quot;http://www.compositesw.com/extensions2&quot;;
declare namespace xs =  &quot;http://www.w3.org/2001/XMLSchema&quot;;
declare namespace custom =  &quot;http://compositesw.com/transform/custom&quot;;

declare function local:school_xml( )
{
  (:invoke resource /users/composite/admin/CISTraining/Physical/Metadata/File_SchoolXML/&quot;&quot;school.xml&quot;&quot; :)
  let $var4 := doc(&quot;/users/composite/admin/CISTraining/Physical/Metadata/File_SchoolXML/&quot;&quot;school.xml&quot;&quot;&quot;)/school:Classes
  return
    $var4
};

let $nodes := 
(
  let $var4:= local:school_xml()
  return
  (
    for $var0 at $counter1 in $var4/school:Class
    return 
      if (fn:not($counter1 &lt;= 2147483647 and fn:true()))
      then ()
      else 
        for $var3 at $counter2 in $var0/school:Student
        return 
          if (fn:not($counter2 &lt;= 2147483647 and fn:true()))
          then ()
          else 
            element ClassList
            {
              (
                element CourseName
                {
                  if (fn:string-length(fn:string($var0/school:CourseName)) &gt; 0)
                  then
                    ()
                  else
                    attribute xsi:nil {&quot;true&quot;}
                  ,
                  $var0/school:CourseName/text()
                }
                ,
                element CourseDescription
                {
                  if (fn:string-length(fn:string($var0/school:CourseDescription)) &gt; 0)
                  then
                    ()
                  else
                    attribute xsi:nil {&quot;true&quot;}
                  ,
                  $var0/school:CourseDescription/text()
                }
                ,
                element Department
                {
                  if (fn:string-length(fn:string($var0/school:Department)) &gt; 0)
                  then
                    ()
                  else
                    attribute xsi:nil {&quot;true&quot;}
                  ,
                  $var0/school:Department/text()
                }
                ,
                element CreditNumber
                {
                  if (fn:string-length(fn:string($var0/school:CreditNumber)) &gt; 0)
                  then
                    ()
                  else
                    attribute xsi:nil {&quot;true&quot;}
                  ,
                  $var0/school:CreditNumber/text()
                }
                ,
                element TeacherName
                {
                  if (fn:string-length(fn:string($var0/school:Teacher/school:TeacherName)) &gt; 0)
                  then
                    ()
                  else
                    attribute xsi:nil {&quot;true&quot;}
                  ,
                  $var0/school:Teacher/school:TeacherName/text()
                }
                ,
                element TeacherEmail
                {
                  if (fn:string-length(fn:string($var0/school:Teacher/school:TeacherEmail)) &gt; 0)
                  then
                    ()
                  else
                    attribute xsi:nil {&quot;true&quot;}
                  ,
                  $var0/school:Teacher/school:TeacherEmail/text()
                }
                ,
                element StudentName
                {
                  if (fn:string-length(fn:string($var3/school:StudentName)) &gt; 0)
                  then
                    ()
                  else
                    attribute xsi:nil {&quot;true&quot;}
                  ,
                  $var3/school:StudentName/text()
                }
                ,
                element StudentEmail
                {
                  if (fn:string-length(fn:string($var3/school:StudentEmail)) &gt; 0)
                  then
                    ()
                  else
                    attribute xsi:nil {&quot;true&quot;}
                  ,
                  $var3/school:StudentEmail/text()
                }
              )
            }
    ,
    let $counter := count($var4/school:Class/school:Student)
    return
      if ($counter &gt;= 0) then
      ()
      else 
        for $k in (1 to ( 0 - $counter))
        return
          element ClassList
          {
            (
              element CourseName
              {
              }
              ,
              element CourseDescription
              {
              }
              ,
              element Department
              {
              }
              ,
              element CreditNumber
              {
              }
              ,
              element TeacherName
              {
              }
              ,
              element TeacherEmail
              {
              }
              ,
              element StudentName
              {
              }
              ,
              element StudentEmail
              {
              }
            )
          }
  )
)
return
$nodes</attribute>
</metadata>