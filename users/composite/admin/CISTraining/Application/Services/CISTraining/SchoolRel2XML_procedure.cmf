<?xml version="1.1" encoding="UTF-8"?>
<metadata name="SchoolRel2XML" path="/users/composite/admin/CISTraining/Application/Services/CISTraining/SchoolRel2XML" type="PROCEDURE" subtype="TRANSFORM_PROCEDURE" changeToken="0">
  <parameters>
    <parameter name="Classes" direction="OUT" nullable="false">
      <datatype name="Classes" namespace="http://compositesw.com/transform/example/school" referenceDefinitionSet="/users/composite/admin/CISTraining/Physical/Metadata/File_SchoolXML/schoolDefinitions" referenceType="{http://compositesw.com/transform/example/school}Classes" subType="ELEMENT_DECL" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="ELEMENT" componentName="{http://compositesw.com/transform/example/school}Classes">
        <schemaDatatype>
          <datatype name="Classes" type="TREE" refId="1"></datatype>
        </schemaDatatype>
      </datatype>
    </parameter>
  </parameters>
  <security>
    <owner user="admin" domain="composite"/>
  </security>
  <dependency target="/users/composite/admin/CISTraining/Business/Logical/School/CLASSES" type="TABLE">
    <datatype name="Tree" type="TREE" refId="1"></datatype>
  </dependency>
  <dependency target="/users/composite/admin/CISTraining/Business/Logical/School/CLASS_STUDENTS" type="TABLE">
    <datatype name="Tree" type="TREE" refId="1"></datatype>
  </dependency>
  <dependency target="/users/composite/admin/CISTraining/Physical/Metadata/File_SchoolXML/schoolDefinitions" type="DEFINITION_SET">
    <datatype name="Tree" type="TREE" refId="1"></datatype>
  </dependency>
  <attribute name="creationDate" type="LONG">1479924894459</attribute>
  <attribute name="creatorUserDomain" type="STRING">composite</attribute>
  <attribute name="creatorUserId" type="INTEGER">-1973</attribute>
  <attribute name="creatorUserName" type="STRING">admin</attribute>
  <attribute name="lastModifiedDate" type="LONG">1491324565387</attribute>
  <attribute name="lastModifiedUserDomain" type="STRING">composite</attribute>
  <attribute name="lastModifiedUserId" type="INTEGER">-1973</attribute>
  <attribute name="lastModifiedUserName" type="STRING">admin</attribute>
  <attribute name="resourceModifiedDateOnSourceCISSite" type="LONG">1479924894459</attribute>
  <attribute name="transformModel" type="BYTE_ARRAY">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</attribute>
  <attribute name="transformSource" type="STRING">declare copy-namespaces no-preserve,inherit;
declare namespace xquery =  &quot;http://compositesw.com/transform/xquery&quot;;
declare namespace sql =  &quot;http://compositesw.com/transform/sql&quot;;
declare namespace school =  &quot;http://compositesw.com/transform/example/school&quot;;
declare namespace ext2 =  &quot;http://www.compositesw.com/extensions2&quot;;
declare namespace xs =  &quot;http://www.w3.org/2001/XMLSchema&quot;;
declare namespace custom =  &quot;http://compositesw.com/transform/custom&quot;;

declare function local:CLASSES( )
{
  (:invoke resource /users/composite/admin/CISTraining/Business/Logical/School/CLASSES :)
  let $query := &quot; select * from /users/composite/admin/CISTraining/Business/Logical/School/CLASSES&quot;
  let $var2 := composite:executeQuery($query)//result
  return
    $var2
};

declare function local:cast( $CreditNumber)
{
  let $result := ($CreditNumber cast as xs:integer)
  return (
  $result
  )
};

declare function local:CLASS_STUDENTS( )
{
  (:invoke resource /users/composite/admin/CISTraining/Business/Logical/School/CLASS_STUDENTS :)
  let $query := &quot; select * from /users/composite/admin/CISTraining/Business/Logical/School/CLASS_STUDENTS&quot;
  let $var13 := composite:executeQuery($query)//result
  return
    $var13
};

let $nodes := 
(
  element school:Classes
  {
    let $var2:= local:CLASSES()
    return
    (
      for $var1 at $counter0 in $var2
      return 
        if (fn:not($counter0 &lt;= 2147483647 and fn:true()))
        then ()
        else 
          element school:Class
          {
            (
              element school:CourseName
              {
                $var1/CourseName/text()
              }
              ,
              element school:CourseDescription
              {
                $var1/CourseDescription/text()
              }
              ,
              element school:Department
              {
                $var1/Department/text()
              }
              ,
              let $var8 := $var1/CreditNumber/text()
              let $var7:= local:cast(fn:data($var8))
              return
              element school:CreditNumber
              {
                $var7
              }
              ,
              element school:Teacher
              {
                (
                  element school:TeacherName
                  {
                    $var1/TeacherName/text()
                  }
                  ,
                  element school:TeacherEmail
                  {
                    $var1/TeacherEmail/text()
                  }
                )
              }
              ,
              let $var13:= local:CLASS_STUDENTS()
              return
              (
                for $var12 at $counter11 in $var13
                let $pCourseName := $var1/CourseName
                return 
                  if (fn:not($counter11 &lt;= 2147483647 and $pCourseName = $var12/CourseName))
                  then ()
                  else 
                    element school:Student
                    {
                      (
                        element school:StudentName
                        {
                          $var12/StudentName/text()
                        }
                        ,
                        element school:StudentEmail
                        {
                          $var12/StudentEmail/text()
                        }
                      )
                    }
                ,
                let $counter := count($var13)
                return
                  if ($counter &gt;= 1) then
                  ()
                  else 
                    for $k in (1 to ( 1 - $counter))
                    return
                      element school:Student
                      {
                        (
                          element school:StudentName
                          {
                          }
                          ,
                          element school:StudentEmail
                          {
                          }
                        )
                      }
              )
            )
          }
      ,
      let $counter := count($var2)
      return
        if ($counter &gt;= 1) then
        ()
        else 
          for $k in (1 to ( 1 - $counter))
          return
            element school:Class
            {
              (
                element school:CourseName
                {
                }
                ,
                element school:CourseDescription
                {
                }
                ,
                element school:Department
                {
                }
                ,
                element school:CreditNumber
                {
                }
                ,
                element school:Teacher
                {
                  (
                    element school:TeacherName
                    {
                    }
                    ,
                    element school:TeacherEmail
                    {
                    }
                  )
                }
                ,
                element school:Student
                {
                  (
                    element school:StudentName
                    {
                    }
                    ,
                    element school:StudentEmail
                    {
                    }
                  )
                }
              )
            }
    )
  }
)
return
$nodes</attribute>
</metadata>